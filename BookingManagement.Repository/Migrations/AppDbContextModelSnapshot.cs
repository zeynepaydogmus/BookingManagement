// <auto-generated />
using BookingManagement.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookingManagement.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BookingManagement.Core.Models.Place", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Places");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adress = "DummyAdress",
                            Capacity = 150,
                            Category = "Vine House",
                            Name = "DummyName",
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            Adress = "DummyAdress",
                            Capacity = 130,
                            Category = "Fine Dine",
                            Name = "DummyName",
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            Adress = "DummyAdress",
                            Capacity = 200,
                            Category = "Grill House",
                            Name = "DummyName",
                            Status = true
                        });
                });

            modelBuilder.Entity("BookingManagement.Core.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("TelNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Gender = "Kadın",
                            Name = "Test",
                            Surname = "Test",
                            TelNumber = 21211222
                        },
                        new
                        {
                            Id = 2,
                            Gender = "Kadın",
                            Name = "Test1",
                            Surname = "Test1",
                            TelNumber = 21211222
                        },
                        new
                        {
                            Id = 3,
                            Gender = "Erkek",
                            Name = "Test2",
                            Surname = "Test2",
                            TelNumber = 21211222
                        },
                        new
                        {
                            Id = 4,
                            Gender = "Erkek",
                            Name = "Test3",
                            Surname = "Test3",
                            TelNumber = 21211222
                        });
                });

            modelBuilder.Entity("BookingManagement.Core.Models.UserBooking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("PlaceId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("UserId");

                    b.ToTable("UserBooking");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PlaceId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            PlaceId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            PlaceId = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            PlaceId = 3,
                            UserId = 4
                        });
                });

            modelBuilder.Entity("BookingManagement.Core.Models.UserBooking", b =>
                {
                    b.HasOne("BookingManagement.Core.Models.Place", "Place")
                        .WithMany("UserBookings")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookingManagement.Core.Models.User", "User")
                        .WithMany("UserBookings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BookingManagement.Core.Models.Place", b =>
                {
                    b.Navigation("UserBookings");
                });

            modelBuilder.Entity("BookingManagement.Core.Models.User", b =>
                {
                    b.Navigation("UserBookings");
                });
#pragma warning restore 612, 618
        }
    }
}
